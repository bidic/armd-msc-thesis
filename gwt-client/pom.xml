<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- POM file generated with GWT webAppCreator -->
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>j2ee-sample</artifactId>
		<groupId>pl.com.mcg</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<groupId>pl.com.mcg</groupId>
	<artifactId>gwt-client</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>GWT Maven Archetype</name>

	<properties>
		<skipTests>true</skipTests>

		<!-- Convenience property to set the GWT version -->
		<gwtVersion>2.2.0</gwtVersion>

		<!-- GWT needs at least java 1.5 -->
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
		<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
	</properties>

	<dependencies>
		<!-- Jar with EJB interface for client -->
		<dependency>
			<groupId>pl.com.mcg</groupId>
			<artifactId>ejb-example</artifactId>
			<version>1.0-SNAPSHOT</version>
			<type>ejb-client</type>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwtVersion}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwtVersion}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>gf-client</artifactId>
			<version>3.1</version>
			<scope>system</scope>
			<systemPath>C:/glassfish31/glassfish/lib/gf-client.jar</systemPath>
		</dependency>

	</dependencies>

	<build>
		<!-- Generate compiled stuff in the folder used for developing mode -->
		<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

		<plugins>

			<!-- GWT Maven Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test</goal>
							<goal>i18n</goal>
							<goal>generateAsync</goal>
						</goals>
					</execution>

					<!--					<execution>-->
					<!--						<id>mergewebxml</id>-->
					<!--						<phase>process-classes</phase>-->
					<!--						<goals>-->
					<!--							<goal>mergewebxml</goal>-->
					<!--						</goals>-->
					<!--					</execution>-->
				</executions>
				<!--
					Plugin configuration. There are many available options, see
					gwt-maven-plugin documentation at codehaus.org
				-->
				<configuration>
					<noServer>true</noServer>
					<runTarget>http://mcg-aabf6ab905a:8080/client/</runTarget>

					<!--					<runTarget>ClientSample.html</runTarget>-->
					<hostedWebapp>${webappDirectory}</hostedWebapp>
					<i18nMessagesBundle>pl.com.mcg.client.Messages</i18nMessagesBundle>

					<!--					<packageNamePerModule>-->
					<!--						<clientSample>pl.com.mcg.server</clientSample>-->
					<!--					</packageNamePerModule>-->
					<!--
						<scanRemoteServiceRelativePathAnnotation>true</scanRemoteServiceRelativePathAnnotation>
					-->
				</configuration>
			</plugin>

			<!-- Copy static web files before executing gwt:run -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>exploded</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<webappDirectory>${webappDirectory}</webappDirectory>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>